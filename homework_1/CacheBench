	.section	__TEXT,__text,regular,pure_instructions
	.macosx_version_min 10, 10
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp0:
	.cfi_def_cfa_offset 16
Ltmp1:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp2:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
Ltmp3:
	.cfi_offset %rbx, -56
Ltmp4:
	.cfi_offset %r12, -48
Ltmp5:
	.cfi_offset %r13, -40
Ltmp6:
	.cfi_offset %r14, -32
Ltmp7:
	.cfi_offset %r15, -24
	leaq	L_str(%rip), %rdi
	callq	_puts
	leaq	-48(%rbp), %rbx
	movq	%rbx, %rdi
	callq	_time
	movq	-48(%rbp), %r14
	movq	%rbx, %rdi
	callq	_ctime
	movq	%rax, %rcx
	leaq	L_.str1(%rip), %rdi
	xorl	%eax, %eax
	movq	%r14, %rsi
	movq	%rcx, %rdx
	callq	_printf
	leaq	L_.str2(%rip), %rdi
	movl	$4, %esi
	movl	$8, %edx
	movl	$8, %ecx
	xorl	%eax, %eax
	callq	_printf
	movl	$1, %edi
	callq	_sleep
	movq	%rbx, %rdi
	callq	_time
	leaq	_Data(%rip), %rax
	movl	268435452(%rax), %ebx
	movq	%rax, %r15
	leaq	-56(%rbp), %rdi
	movq	%rdi, %r13
	callq	_time
	leaq	L_.str3(%rip), %rdi
	xorl	%eax, %eax
	movq	%rdi, %r12
	movl	%ebx, %esi
	callq	_printf
	movq	-48(%rbp), %rsi
	movq	-56(%rbp), %rdx
	movq	%rdx, %rcx
	subq	%rsi, %rcx
	leaq	L_.str4(%rip), %rdi
	xorl	%eax, %eax
	movq	%rdi, %r14
	callq	_printf
	movl	$1, %edi
	callq	_sleep
	leaq	-48(%rbp), %rdi
	callq	_time
	movl	268435452(%r15), %ebx
	movq	%r13, %rdi
	callq	_time
	xorl	%eax, %eax
	movq	%r12, %rdi
	movl	%ebx, %esi
	callq	_printf
	movq	-48(%rbp), %rsi
	movq	-56(%rbp), %rdx
	movq	%rdx, %rcx
	subq	%rsi, %rcx
	xorl	%eax, %eax
	movq	%r14, %rdi
	callq	_printf
	movl	$1, %eax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc

	.globl	_Data                   ## @Data
.zerofill __DATA,__common,_Data,268435456,4
	.section	__TEXT,__cstring,cstring_literals
L_.str1:                                ## @.str1
	.asciz	">>CacheBenchmark: Start: Time = %12ld    %s\n"

L_.str2:                                ## @.str2
	.asciz	">>Size of int: %ld; Size of long int: %ld; Size of time_t: %ld\n"

L_.str3:                                ## @.str3
	.asciz	">>>>X: %d\n"

L_.str4:                                ## @.str4
	.asciz	">>CacheBenchmark: Start: %12ld; End: %12ld; Delta: %12ld\n"

	.align	4                       ## @str
L_str:
	.asciz	">>CacheBenchmark: Starting."


.subsections_via_symbols
